Capa Entities:
	clsPersona:
		-Propiedades:
			int id: consultable/modificable.
			string nombre: consultable/modificable.
			string apellidos: consultable/modificable.
			date fechaNacimiento: consultable/modificable.
			string foto: consultable/modificable.
			string direccion: consultable/modificable.
			string telefono: consultable/modificable.
			int idDepartamento: consultable/modificable.
		-Métodos:
			getters y setters.
			contructores (con y sin parámetros).
			toString.
	clsDepartamento:
		-Propiedades:
			int id: consultable/modificable.
			string nombre: consultable/modificable.
			
		-Métodos:
			getters y setters.
			contructores (con y sin parámetros).

Capa DAL:
	·Conexion
		clsMyConnection:
			-Propiedades:
				String server: consultable/modificable.
				String dataBase: consultable/modificable.
				String user: consultable/modificable.
				String pass: consultable/modificable.
			-Métodos:
				getters y setters.
				contructores (con y sin parámetros).
				getConnection(): Método que abre una conexión con la base de datos.
				closeConnection(ref SqlConnection connection): Este metodo cierra una conexión con la Base de datos.


	·Gestoras
		GestoraAccionesDepartamentosDAL:
			-Métodos:
				public static int deleteDepartamentoDAL(int id): Este método borra el departamento que coincida con el id introducido.
				public static int addDepartamentoDAL(clsDepartamento departamento): Este método añade un nuevo departamento a la bbdd.
				public static int alterDepartamentoDAL(clsDepartamento departamento): Este método modifica el departamento según su id.

		GestoraAccionesPersonasDAL:
			-Métodos:
				public static int deletePersonaDAL(int id): Este método borra la persona que coincida con el id introducido.	
				public static int addPersonaDAL(clsPersona persona): Este método añade un nuevo departamento a la bbdd.
				public static int alterPersonaDAL(clsPersona persona): Este método modifica el departamento según su id.
				

	·Listados
		clsListadoDepartamentosDAL:
			-Propiedades:
				clsMyConnection myConnection
       				SqlConnection sqlConnection
       				ObservableCollection<clsDepartamento> listaDepartamentos
			-Métodos:
				constructor sin parámetros
				public ObservableCollection<clsDepartamento> getDepartamentosCompletos(): Este método extrae todos los departamentos de la bbdd.
				public clsPersona getDepartamento(int id): Este método extrae un departamento de la bbdd según su id.

		clsListadoPersonasDAL:
			-Propiedades:
				clsMyConnection myConnection
       				SqlConnection sqlConnection
       				ObservableCollection<clsPersona> listaPersonas
			-Métodos:
				constructor sin parámetros
				public ObservableCollection<clsPersona> getUsuariosCompletos(): Este método extrae todas las personas de la bbdd.
				public clsPersona getUsuario(int id): Este método extrae un usuario de la bbdd según su id.

Capa BL:
	·Gestoras
		GestoraAccionesDepartamentosBL:
			-Métodos:
				public static int addDepartamentoBL(clsDepartamento departamento): Este método añade un departamento a la bbdd.
				public static int alterDepartamentoBL(clsDepartamento departamento): Este método edita un departamento de la bbdd.
				public static int deleteDepartamentoBL(int id): Este método borra una persona de la bbdd.

		GestoraAccionesPersonasBL:
			-Métodos:
				public static int addPersonaBL(clsPersona persona): Este método añade una persona a la bbdd.
				public static int alterPersonaBL(clsPersona persona): Este método edita una persona de la bbdd.
				public static int deletePersonasBL(int id): Este método borra una persona de la bbdd.
	·Listados
		clsListadoDepartamentosBL:
			-Propiedades:
				ObservableCollection<clsDepartamento> departamentos: consultable/modificable.
				clsDepartamento departamento: consultable/modificable. 
			-Métodos:
				getters y setters.
				contructores (con y sin parámetros).
			
		clsListadoPersonasBL:
			-Propiedades:
				ObservableCollection<clsPersona> personas: consultable/modificable.
				clsPersona persona: consultable/modificable. 
			-Métodos:
				getters y setters.
				contructores (con y sin parámetros).


Capa UI (ASP):
	·Models
		clsPersonanombreDepartamento:
			-Propiedades:
				string nombreDepartamento: consultable/modificable.
				clsPersona persona: consultable/modificable.
			-Métodos:
				getters y setters.
				contructores (con y sin parámetros).
		·ViewModels
			VM_ListadoPersonas:
				-Propiedades:
					clsListadoPersonasBL listaBL.
				-Métodos:
					constructores.
					public ObservableCollection<clsPersona> GetListadoClsPersonas(): Este metodo rellena la la propiedad
			VM_PersonaListaDepartamentos:
				-Propiedades:
					clsPersona persona: consultable/modificable.
        				ObservableCollection<clsDepartamento> departamentos: consultable/modificable.
				-Métodos:
					getters y setters
					constructores
			VM_PersonaNombreDepartamento:
				-Propiedades:
					clsPersonaNombreDepartamento persona: consultable, modificable.
				-Métodos:
					getters y setters
					constructores
	·Controllers
		HomeController 
	·Views
		Index: necesita un listado personas.
		Create: necesita una persona vacía con una lista de departamentos.
		Delete: necesita una persona con el nombre de su departamento.
		Edit: necesita una persona seleccionada con una lista de departamentos.
		Details: necesita una persona con el nombre de su departamento.


Capa UI (UWP):
	·Models
		PersonanombreDepartamento:
			-Propiedades:
				string nombreDepartamento.
				clsPersona persona.
			-Métodos:
				getters y setters.
				contructores (con y sin parámetros).

	·ViewModels
		DepartamentosVM
			-Propiedades
				ObservableCollection<clsDepartamento> listaDepartamentos.
        			ObservableCollection<clsDepartamento> ListaDepartamentosFiltrada.
        			clsDepartamento departamento;
        			string textoBox;
        			DelegateCommand commandFiltrar;
        			DelegateCommand commandEliminar;
        			DelegateCommand commandGuardar;
        			string Cadena
			Métodos:
				getters y setters.
				contructores.
				private bool FiltrarCommand_CanExecute(): Este método comprueba que el comando filtrar se pueda ejecutar.
				private void FiltrarCommand_Execute(): Este método es la ejecucion del comando filtrar. Asigna a la lista de los departamentos filtrados aquellos departamentos de la lista que contenga en el nombre en el contenido del textbox.
				private async void EliminarCommand_Execute(): Este método es la ejecucion del comando eliminar. Pregunta si quieres eliminar a dicho departamento. Si seleccionas sí, lo elimina.
				private bool EliminarCommand_CanExecute(): Este método comprueba que el comando eliminar se pueda ejecutar.
				private async void GuardarCommand_Execute(): Este método es la ejecucion del comando guardar. Dependiendo de si el id es por defecto (0) o no, se guardan creando uno nuevo o editándose uno antiguo.
				private bool GuardarCommand_CanExecute(): Este método comprueba que el comando guardar se pueda ejecutar.
				private async void RellenarLista(): Este método rellena la lista de departamentos extrayéndolas de la bbdd.

		PersonaListaDepartamentosVM
			-Propiedades
				ObservableCollection<clsDepartamento> listaDepartamentos
        			clsPersona persona
        			DelegateCommand commandGuardar
			-Métodos
				getters y setters.
				contructores.
				private async void GuardarCommand_Execute(): Este método es la ejecucion del comando guardar. Dependiendo de si el id es por defecto (0) o no, se guardan creando uno nuevo o editándose uno antiguo.
				private bool GuardarCommand_CanExecute(): Este método comprueba que el comando guardar se pueda ejecutar.

		PersonaNombreDepartamentoVM
			-Propiedades
				ObservableCollection<PersonaNombreDepartamento> listaPersonas
        			ObservableCollection<PersonaNombreDepartamento> ListaPersonasFiltrada
        			PersonaNombreDepartamento persona
        			string textoBox
        			DelegateCommand commandFiltrar
        			DelegateCommand commandEliminar
        			string Cadena
			-Métodos
				getters y setters.
				contructores.
				private bool FiltrarCommand_CanExecute(): Este método comprueba que el comando filtrar se pueda ejecutar.
				private void FiltrarCommand_Execute(): Este método es la ejecucion del comando filtrar. Asigna a la lista de las personas filtradas aquellas personas de la lista que contenga en el nombre o en el apellido, en el contenido del textbox.
				private async void EliminarCommand_Execute(): Este método es la ejecucion del comando eliminar. Pregunta si quieres eliminar a dicho personaSi seleccionas sí, lo elimina.
				private bool EliminarCommand_CanExecute(): Este método comprueba que el comando eliminar se pueda ejecutar.


	·Views
		CrearDepartamento
		CrearPersona
		DepartamentosView
		EditarDepartamento
		EditarPersona
		Login
		MainPage
		PersonasView
















